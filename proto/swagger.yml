swagger: '2.0'
info:
  description: >-
    This is a simple test rest service implementing very basic accounts man–∞gement system
  version: 0.0.1
  title: testrest
  contact:
    email: onokonem@gmail.com
  license:
    name: GNU GENERAL PUBLIC LICENSE
    url: 'https://www.gnu.org/licenses/gpl-3.0.en.html'
host: localhost:8080
basePath: /testrest
tags:
  - name: account
    description: Everything about account(s)
schemes:
  - http
paths:
  /accounts:
    get:
      tags:
        - account
      summary: list all the accounts available
      description: For the real life paging would be required
      operationId: listAccounts
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Account'
        '400':
          description: Invalid status value
  /account:
    post:
      tags:
        - account
      summary: Add a new account
      description: ''
      operationId: addAccount
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Account to be added
          required: true
          schema:
            $ref: '#/definitions/Account'
      responses:
        '204':
          description: successful operation
        '405':
          description: Invalid input
  '/account/{accountID}':
  /account/findByName:
    get:
      tags:
        - account
      summary: Find Account by name
      description: For the real life it would be better to make all other methods accepting account name as well as account ID
      operationId: findAccountByName
      produces:
        - application/json
      parameters:
        - name: name
          in: query
          description: Name to be found
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Account'
        '400':
          description: Invalid status value
  '/account/{accountID}':
    get:
      tags:
        - account
      summary: Find account by ID
      description: Returns a single account
      operationId: getAccountByID
      produces:
        - application/json
      parameters:
        - name: accountID
          in: path
          description: ID of account to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Account'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
    delete:
      tags:
        - account
      summary: Deletes an account
      description: ''
      operationId: deleteAccount
      produces:
        - application/json
      parameters:
        - name: accountID
          in: path
          description: Account id to delete
          required: true
          type: integer
          format: int64
      responses:
        '204':
          description: successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: Account not found
  '/account/withdrawal/{accountID}':
    put:
      tags:
        - account
      summary: Withdraw some money from some account
      description: ''
      operationId: withdrawAccount
      produces:
        - application/json
      parameters:
        - name: accountID
          in: path
          description: Account id to update
          required: true
          type: integer
          format: int64
        - name: amount
          in: query
          description: Amount to be withdrawed
          type: integer
          format: int64
      responses:
        '204':
          description: successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: Account not found
  '/account/deposit/{accountID}':
    put:
      tags:
        - account
      summary: Place some money to some account
      description: ''
      operationId: depositToAccount
      produces:
        - application/json
      parameters:
        - name: accountID
          in: path
          description: Account id to update
          required: true
          type: integer
          format: int64
        - name: amount
          in: query
          description: Amount to be placed
          type: integer
          format: int64
      responses:
        '204':
          description: successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: Account not found
        '500':
          description: Operation error
  '/account/transfer/{accountID}':
    put:
      tags:
        - account
      summary: Transfer some money from some account to some other account
      description: ''
      operationId: transferBetweenAccounts
      produces:
        - application/json
      parameters:
        - name: accountID
          in: path
          description: Account id to take money from
          required: true
          type: integer
          format: int64
        - name: amount
          in: query
          description: Amount to be transferred
          type: integer
          format: int64
        - name: target
          in: query
          description: Account id to place money to
          type: integer
          format: int64
      responses:
        '204':
          description: successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: Account not found
        '500':
          description: Operation error
definitions:
  Account:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
        description: 20 symbols max
      amount:
        type: integer
        format: int64
      ctime:
        type: string
        format: date-time
      mtime:
        type: string
        format: date-time
